{"componentChunkName":"component---src-templates-blog-post-js","path":"/precisamos-falar-sobre-progressive-enhancement/","result":{"data":{"site":{"siteMetadata":{"title":"Juliano Padilha"}},"markdownRemark":{"id":"c44a0c25-8772-5712-a98a-0f636a802eae","excerpt":"Progressive Enhancement √© uma forma de pensar o desenvolvimento de aplica√ß√µes web com foco no front-end de uma forma que as melhorias sejam progressivas, como o‚Ä¶","html":"<p><strong>Progressive Enhancement</strong> √© uma forma de pensar o desenvolvimento de aplica√ß√µes web com foco no front-end de uma forma que as melhorias sejam progressivas, como o nome sugere. N√£o ficou claro?! N√£o esquenta! Vamos decifrar o que esses conceitos significam e como aplic√°-los nos seus projetos. ü§ò</p>\n<blockquote>\n<p><strong>Nota do autor:</strong> Este texto √© uma compila√ß√£o envolvendo anota√ß√µes e transcri√ß√µes do segundo cap√≠tulo do e-book ‚ÄúColetaÃÇnea Front-end - Uma Antologia da Comunidade Front-end Brasileira‚Äù que fala sobre Progressive Enhancement e que foi escrito pelo <a href=\"https://twitter.com/srsaude\">Luiz Real</a>, instrutor da Alura.</p>\n</blockquote>\n<p>Quando trata-se do comportamento de aplica√ß√µes desenvolvidas para a web, todo cuidado passa a ser pouco. Com navegadores mais modernos e compat√≠veis com as atuais tecnologias e especifica√ß√µes, tornou-se poss√≠vel a abrang√™ncia de mais recursos, ampliando as possibilidades dos desenvolvedores. Seguindo est√° tend√™ncia, o ciclo natural seria que nossos sites tamb√©m evolu√≠ssem, tornando-se cada vez mais sofisticados. </p>\n<p>Por√©m, dentro deste cen√°rio, acabamos esquecendo um fator primordial para o sucesso: o comportamento do usu√°rio e o navegador que eles utilizam para acessar nossos sites, que muitas vezes n√£o √© o navegador com os √∫ltimos recursos.</p>\n<p>Normalmente, quando planejamentos o desenvolvimento de um site acabamos fazendo-o para um p√∫blico indeterminado de pessoas. E dentre esse p√∫blico, temos:</p>\n<ul>\n<li>Pessoas que <strong>n√£o gostam de JavaScript</strong> sendo executado em seus computadores;</li>\n<li>Pessoas que <strong>n√£o podem atualizar</strong> seus navegadores;</li>\n<li>Pessoas acessando a internet a partir de <strong>dispositivos limitados</strong>;</li>\n<li>Pessoas com <strong>dificuldades motoras, visuais e auditivas</strong> que nem sempre conseguem utilizar o mouse para navegar ou dependem de leitores de tela;</li>\n<li>E ainda temos um outro usu√°rio a considerar, que n√£o tem JavaScript nem CSS habilitados: <strong>as ferramentas de busca</strong>.</li>\n</ul>\n<h3>Ent√£o como podemos desenvolver sites levando em conta estes cen√°rios?</h3>\n<p>Em um primeiro momento, uma forma de pensar seria desenvolver o site para o p√∫blico geral, que s√£o aqueles que tem acesso aos navegadores mais modernos e atualizados e sem bloqueios de acessibilidade. Em um segundo momento, procuraria-se atender os usu√°rios que j√° possuem mais limita√ß√µes, ou seja, definindo os tipos de usu√°rios e quais implementa√ß√µes s√£o necess√°rias a cada fase do projeto para suprir as suas necessidades. Dentro do mundo de desenvolvimento web, essa pr√°tica √© conhecida como <strong>‚ÄúGraceful Degradation‚Äù</strong>.</p>\n<p>Por√©m, pensar dessa forma pode nos levar a alguns problemas, como no exemplo a seguir dado pelo <strong>Luiz Real</strong>(ver nota do autor):</p>\n<blockquote>\n<p>Pegamos como exemplo para analisar: um bot√£o de comprar em uma loja virtual. A compra foi implementada usando AJAX, para dar mais dinamicidade √† navega√ß√£o do usu√°rio.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hidden<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>produto<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>123456<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>number<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>quantidade<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>comprar<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>icone-comprar.png<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#comprar\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> dadosCompra <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        produto<span class=\"token operator\">:</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[name=produto]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">val</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        quantidade<span class=\"token operator\">:</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[name=quantidade]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">val</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Enviamos os dados no formato JSON para o servidor.</span>\n    <span class=\"token comment\">// atualizaPagina eÃÅ uma funcÃßaÃÉo que vai ser executada depois que o servidor confirmar a compra.</span>\n\n    $<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/compra\"</span><span class=\"token punctuation\">,</span> dadosCompra<span class=\"token punctuation\">,</span> atualizaPagina<span class=\"token punctuation\">,</span> <span class=\"token string\">\"json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>A quais problemas essa solu√ß√£o n√£o atende?</li>\n</ul>\n<p>A primeira coisa que podemos pensar √© na acessibilidade da p√°gina: ser√° que os usu√°rios com defici√™ncia visual conseguir√£o comprar nessa loja virtual? Provavelmente n√£o. Afinal, o bot√£o de comprar exemplificado √© uma imagem! O leitor de tela n√£o vai ser capaz de ler o texto ‚Äúcomprar‚Äù da imagem. </p>\n<p>Uma forma de melhoria seria trabalhar com um HTML mais sem√¢ntico:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hidden<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>produto<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>123456<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>number<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>quantidade<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>comprar<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>icone-comprar.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Comprar<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>A tag <code class=\"language-text\">form</code>, como sabemos, serve para indicar que as informa√ß√µes presentes ser√£o enviadas para um servidor. H√° tamb√©m a tag <code class=\"language-text\">button</code> com o tipo <code class=\"language-text\">submit</code>, que indica que essa imagem √© um bot√£o e que ao ser clicado enviar√° o formul√°rio.</p>\n<p>Tendo a preocupacÃßaÃÉo com <strong>Graceful Degradation</strong>, precisamos lembrar de todos os cenaÃÅrios que deixamos de lado ao desenvolver nosso site com as uÃÅltimas tecnologias.</p>\n<p>Agora, imagine uma situa√ß√£o onde precisamos implementar uma solucÃßaÃÉo sem JavaScript. SeraÃÅ que eÃÅ possiÃÅvel? Pelo servidor nos devolver um JSON como resultado, e naÃÉo uma paÃÅgina, <strong>precisamos</strong> de JavaScript, agora. Ou seja, por termos desenvolvido uma solucÃßaÃÉo sem pensar nos casos mais limitados, acabamos caindo em um beco sem saiÃÅda. Precisando ent√£o <strong>refazer boa parte da nossa solu√ß√£o</strong>, inclusive do lado do servidor.</p>\n<ul>\n<li>Como fazer para n√£o corrermos o risco de esquecermos estes cen√°rios mais limitados durante o desenvolvimento de nossas aplica√ß√µes? ü§î</li>\n</ul>\n<p><strong>Come√ßando exatamente por eles!</strong> Essa √© a ideia do <strong>Progressive Enhancement</strong>. </p>\n<h2>Progressive Enhancement</h2>\n<p>Com essa breve contextualiza√ß√£o dos cen√°rios que enfrentamos durante o desenvolvimento dos nossos projetos web, agora podemos entrar mais a fundo nos conceitos de Progressive Enhancement. </p>\n<p>Para compreender a diferen√ßa entre <strong>Graceful Degradation</strong> e <strong>Progressive Enhancement</strong>, vamos tomar como exemplo o mesmo cen√°rio de antes: precisamos implementar o bot√£o para comprar um produto em uma loja virtual.</p>\n<p>Qual seria ent√£o o nosso cen√°rio mais limitado? Bom, um navegador baseado em texto j√° √© um come√ßo. Neste tipo de navegador, a √∫nica ferramenta que temos dipon√≠vel √© o HTML.</p>\n<ul>\n<li>Como implementar√≠amos o bot√£o de compra utilizando apenas HTML? Com algo similar ao que j√° t√≠nhamos:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/comprar<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>comprar<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hidden<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>produto<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>123456<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>number<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>quantidade<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Comprar<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>O interessante de se observar nesta implementa√ß√£o, √© o uso do atributo <code class=\"language-text\">action</code> no formul√°rio. Ele faz com que o navegador saiba para qual endere√ßo no servidor os dados do formul√°rio devem ser enviados. Assim, n√£o precisamos de JavaScript nenhum para fazer o navegador entender isso.</p>\n<p>Outro ponto interessante, √© a inser√ß√£o do texto ‚ÄúComprar‚Äù dentro de um bot√£o em vez de uma imagem. Essa decis√£o al√©m de tratar a quest√£o dos navegadores baseados em texto, tamb√©m se mostra compat√≠vel com os leitores de telas utilizados pelos usu√°rios com defici√™ncia visual. </p>\n<p>Tamb√©m vale ressaltar que a decis√£o de come√ßar pelo cen√°rio mais limitado influencia tamb√©m o lado servidor da aplica√ß√£o: o formato dos dados enviados ser√£o o padr√£o do navegador e n√£o no formado JSON.</p>\n<ul>\n<li>Para implementar a nossa compra com AJAX, como quer√≠amos anteriormente, podemos escrever o seguinte c√≥digo:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#comprar\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">submit</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    $<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>action<span class=\"token punctuation\">,</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Por estarmos usando um formulaÃÅrio sem√¢ntico, podemos simplesmente pedir para o jQuery pegar os dados desse formulaÃÅrio e enviaÃÅ-lo como o navegador faria, poreÃÅm de forma assiÃÅncrona.</p>\n<p>Quando come√ßamos por um cen√°rio mais limitado, h√° a tend√™ncia natural em solucion√°-lo adequadamente. Isso nos forcÃßa a pensar e desenvolver de uma forma que favorece um HTML mais semaÃÇntico e desacoplado de CSS e JavaScript. Ganhamos naÃÉo apenas um site que funciona bem para todos; ganhamos tambeÃÅm um coÃÅdigo <strong>mais limpo e faÃÅcil de manter</strong>.</p>\n<blockquote>\n<p>Mas quais s√£o os cen√°rios mais limitados? Por onde come√ßar? Como acrescentar funcionalidades sem quebrar o que j√° t√≠nhamos? Veremos isso adiante! üôÉ</p>\n</blockquote>\n<h3>Por onde come√ßar?</h3>\n<p>Come√ßar a desenvolver pensando em <strong>Progressive Enhancement</strong> influencia os mais diversos pontos dentro de um projeto. Seguindo novamente um exemplo dado pelo <strong>Luiz Real</strong>, se formos desenvolver um site para divulgar um produto, podemos pensar, antes de mais nada em:</p>\n<ul>\n<li>Qual nosso p√∫blico-alvo?</li>\n<li>Ser√° que precisamos nos procupar com navegadores antigos?</li>\n<li>Qual a parcela de visitantes do meu site que vir√° de dispositivos m√≥veis?</li>\n<li>Qu√£o importante √© a integra√ß√£o com redes sociais?</li>\n<li>O que posso oferecer para meus visitantes com configura√ß√µes mais limitadas?</li>\n</ul>\n<p>Como podemos perceber, estas s√£o quest√µes que est√£o muito mais relacionadas ao contexto do neg√≥cio do que relacionados a quest√µes t√©cnicas. Ter as respostas para essas quest√µes √© muito relevante para nortear o processo de aplica√ß√£o do conceito de <strong>Progressive Enhancement</strong>.</p>\n<p>Conseguimos perceber at√© aqui que o <strong>Progressive Enhancement</strong> n√£o √© apenas uma forma de desenvolver c√≥digos front-end. <em>√â uma forma diferente de pensar o desenvolvimento do produto como um todo.</em></p>\n<p>Sendo assim, uma poss√≠vel resposta para a nossa pergunta ‚ÄúPor onde come√ßar?‚Äù seria:</p>\n<p><strong>Pelo planejamento do produto</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Tendo bem claro os objetivos do produto, as decis√µes t√©cnicas tornam-se mais simples.</code></pre></div>\n<p>Um grande erro dos desenvolvedores, principalmente dos iniciantes, √© deixar em segundo plano pontos inerentes ao planejamento do projeto e partir diretamente para a codifica√ß√£o. Erro grave! </p>\n<p>Claro que em um cen√°rio real, algumas situa√ß√µes fogem do nosso controle, como p√∫blico-alvo pouco conhecido, influ√™ncia do cliente junto ao projeto e o or√ßamento com prazo limitado.</p>\n<p>Mas ainda com esses potenciais empecilhos, √© poss√≠vel aplicar o <strong>Progressive Enhancement</strong>. Veja s√≥: </p>\n<ul>\n<li>Se n√£o sabemos qual o cen√°rio mais limitado que vamos atender, podemos come√ßar pelo mais limitado.</li>\n<li>Se n√£o temos or√ßamento e/ou prazo suficiente para desenvolver todas as funcionalidade desejadas, podemos entregar as que atendem aos cen√°rios mais limitados primeiro.</li>\n<li>Se n√£o sabemos quais tecnologias os visitantes do site v√£o usar para acessar o conte√∫do, come√ßamos com o m√≠nimo poss√≠vel de tecnologias.</li>\n</ul>\n<h2>Progressive Enhancement e HTML</h2>\n<p>Como sabemos, o HTML √© a base de toda p√°gina na Internet e, portanto, todo usu√°rio do nosso site, seja humano ou m√°quina, tem que entender pelo menos HTML; sempre podemos contar com ele.</p>\n<blockquote>\n<p>Vale ressaltar que atualmente todos os navegadores, em suas √∫ltimas vers√µes, trabalham com HTML5. </p>\n</blockquote>\n<p>Quando dizemos HTML5, na verdade, estamos falando de uma s√©rie de novas funcionalidades, como, novas tags, novos atributos, novas APIs, entre outros. S√£o tantos novos recursos, que os navegadores, em sua maioria, ainda n√£o implementam a especifica√ß√£o do HTML5 em sua totalidade.</p>\n<p>Por√©m, a especifica√ß√£o do HTML j√° foi projetado pensando em <strong>Progressive Enhancement</strong>. Peguemos o exemplo abaixo para analisar:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Teste de HTML5<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>header</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>P√°gina com HTML5<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">></span></span>Bacana, n√©?<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>header</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>section</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>Hora atual<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>time</span><span class=\"token punctuation\">></span></span>22:39<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>time</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Um controle de form novo:<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>range<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">min</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">max</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>10<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>section</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>Logo no in√≠cio do c√≥digo, declaramos o DOCTYPE para indicar para o navegador que estamos utilizando a vers√£o mais recente do HTML, ou seja, que o navegador deve mostrar todo seu potencial.</p>\n<p>E se o navegador n√£o implementar suporte a todos estes recursos? A especifica√ß√£o do HTML recomenda que:</p>\n<ul>\n<li><em>Se um agente de usuaÃÅrio encontrar um elemento que naÃÉo reconhece, ele deve tentar renderizar seu conteuÃÅdo;</em></li>\n<li><em>Se um agente de usuaÃÅrio encontrar um atributo que naÃÉo reconhece, ele deve ignorar a declaracÃßaÃÉo completa deste atributo, isto eÃÅ, o atributo e seu valor;</em></li>\n<li><em>Se um agente de usuaÃÅrio encontrar um valor de atributo que naÃÉo reconhece, ele deve usar o valor padraÃÉo para aquele atributo.</em></li>\n</ul>\n<p>Mesmo que o navegador n√£o entenda exatamente o que estamos querendo dizer, ele vai mostrar o conte√∫do para o usu√°rio; <strong>podemos incrementar a sem√¢ntica e a interatividade do nosso HTML sem quebrar os navegadores mais limitados!</strong> A recomenda√ß√£o √© bem favor√°vel √† aplica√ß√£o do <strong>Progressive Enhancement</strong>.</p>\n<p>No exemplo dado anteriormente, se o navegador n√£o suporta a tag <code class=\"language-text\">&lt;time&gt;</code> e o <code class=\"language-text\">input</code> do tipo <code class=\"language-text\">range</code>, ainda assim o usu√°rio ver√° a hora e um controle de formul√°rio (uma caixa de texto, que √© o controle de formul√°rio padr√£o).</p>\n<h2>Progressive Enhancement e CSS</h2>\n<p>Tendo a nosso HTML como base bem definido, podemos come√ßar a implementar o design com CSS.</p>\n<p>Assim como o HTML, o CSS √© uma tecnologia j√° antiga e que passou por uma grande evolu√ß√£o, culminando no que chamamos agora de <strong>CSS 3</strong>. Assim como o caso do HTML, os navegadores n√£o implementam suporte a todas as novidades, mesmo porque elas continuam vindo, mas os navegadores ignoram as propriedades desconhecidas, de modo que tamb√©m √© muito f√°cil ir incrementando nosso visual de acordo com as funcionalidades dispon√≠veis.</p>\n<p>Al√©m disso, o CSS tem uma outra caracter√≠stica peculiar que facilita o <strong>Progressive Enhancement</strong>: quando uma propriedade aparece duplicada, apenas a √∫ltima declara√ß√£o √© considerada.</p>\n<p>Esse comportamento permite fazer <strong>Progressive Enhancement</strong> de um jeito f√°cil: basta ir acrescentando as funcionalidades mais recentes abaixo das mais antigas! üëå</p>\n<p>Quando pensamos em <strong>Progressive Enhancement</strong>, devemos pensar em dar a melhor experieÃÇncia possiÃÅvel para os cenaÃÅrios limitados. A maior parte dos sites que vamos desenvolver no nosso dia a dia precisaraÃÅ de CSS para ser visualmente agradaÃÅvel e atrair mais usuaÃÅrios. Ou seja, mesmo nos cenaÃÅrios mais limitados, jaÃÅ estaremos dependentes de CSS.</p>\n<blockquote>\n<p>A maioria dos requisitos de front-end que normalmente implementamos com JavaScript podem ser feitos apenas com CSS, ou seja, sem depender de mais uma tecnologia.</p>\n</blockquote>\n<h2>Progressive Enhancement e JavaScript</h2>\n<p>Desenvolver pensando primeiro nos cenaÃÅrios mais limitados jaÃÅ evita que caiamos em certos tipos de armadilhas. No entanto, quando adicionamos JavaScript √† paÃÅgina, precisamos tomar certos cuidados para naÃÉo quebrar o trabalho jaÃÅ feito, assim como no CSS.</p>\n<p>Da mesma forma que devemos pensar no CSS como algo a mais em uma paÃÅgina, devemos tambeÃÅm pensar no JavaScript dessa forma. Isso significa que, na medida do possiÃÅvel, o coÃÅdigo JavaScript naÃÉo deve interferir no seu HTML.</p>\n<p>Tomemos o exemplo dado pelo Luiz Real. Em vez de fazer um link virar uma a√ß√£o em JavaScript como:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>maisProdutos()<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Mais produtos<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>Devemos preservar o HTML original.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>mais-produtos.html<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Mais produtos<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>E adicionar a funcionalidade JavaScript usando o proÃÅprio JavaScript.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span>‚Äô<span class=\"token punctuation\">[</span>href<span class=\"token operator\">=</span><span class=\"token string\">\"mais-produtos.html\"</span><span class=\"token punctuation\">]</span>‚Äô<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span>‚Äôclick‚Äô<span class=\"token punctuation\">,</span> maisProdutos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Dessa forma, nosso site continua funcionando perfeitamente, mesmo que o JavaScript apresente algum problema, e essa eÃÅ uma das principais vantagens do <strong>Progressive Enhancement</strong> para o seu desenvolvimento.</p>\n<blockquote>\n<p>Esse tipo de pensamento eÃÅ conhecido entre os desenvolvedores JavaScript como JavaScript naÃÉo-obstrutivo.</p>\n</blockquote>\n<p>Um ponto que naÃÉo gera dores de cabecÃßa no HTML e no CSS mas que, no JavaScript, eÃÅ bastante complicado, eÃÅ lidar com funcionalidades faltantes. Vimos que, com relacÃßaÃÉo ao HTML, o navegador mostra informacÃßoÃÉes de tags desconhecidas e, com relacÃßaÃÉo ao CSS, o navegador ignora propriedades e valores naÃÉo suportados; o mesmo naÃÉo acontece com o JavaScript: qualquer comando que naÃÉo seja suportado pelo navegador geraraÃÅ um erro de JavaScript, consequentemente parando toda a execucÃßaÃÉo do coÃÅdigo.</p>\n<p>Lidar com as limitacÃßoÃÉes e diferencÃßas entre os navegadores pode ser bastante trabalhoso. Por exemplo, para selecionar elementos da paÃÅgina, podemos usar a funcÃßaÃÉo <code class=\"language-text\">document.querySelector</code>, como  fizemos no exemplo anterior. No entanto, essa funcÃßaÃÉo naÃÉo estaÃÅ presente em todos os navegadores. Para que nosso coÃÅdigo funcione em todos os navegadores, podemos usar a funcÃßaÃÉo <code class=\"language-text\">document.getElementsByClassName</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> resultados <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByClassName</span><span class=\"token punctuation\">(</span>‚Äôresultados‚Äô<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>Entendi! Mas quando o Progressive Enhancement n√£o √© uma alternativa?</h2>\n<p>A abordagem do <strong>Progressive Enhancement</strong> resolve muitos problemas do desenvolvedor front-end ao forcÃßar o foco primeiro na parte mais importante de um site, que eÃÅ prover o conteuÃÅdo. No entanto, <strong>Progressive Enhancement</strong> tem suas desvantagens e nem sempre eÃÅ aplicaÃÅvel. </p>\n<p>Quando desenvolvemos pensando primeiro nos cenaÃÅrios mais limitados, conseguimos planejar nosso desenvolvimento de modo a tornar nosso site minimamente acessiÃÅvel nesses cenaÃÅrios. No entanto, isso pode ser restritivo para o processo criativo de desenvolvimento de um site.</p>\n<p>√â possiÃÅvel desenvolver uma versaÃÉo mais simples, sem as funcionalidades principais, para os cenaÃÅrios mais limitados, usando <strong>Progressive Enhancement</strong>. Essa abordagem eÃÅ seguida, por exemplo, pelo Gmail, o servicÃßo de e-mail da Google. A versaÃÉo principal do cliente web eÃÅ desenvolvida usando recursos avancÃßados de JavaScript. Para simplificar o desenvolvimento dessa versaÃÉo e ainda permitir o acesso aos e-mails nos navegadores mais limitados, foi desenvolvida uma versaÃÉo baseada apenas em HTML.</p>\n<p>Mesmo nos cenaÃÅrios em que <strong>Progressive Enhancement</strong> naÃÉo eÃÅ aplicaÃÅvel, eÃÅ interessante ter em mente as preocupacÃßoÃÉes dessa forma de desenvolvimento. Desenvolver para a web eÃÅ desenvolver para todos, independente de plataforma, navegador, liÃÅngua e capacidades, e essa eÃÅ a principal preocupacÃßaÃÉo do <strong>Progressive Enhancement</strong>.</p>","frontmatter":{"title":"Precisamos falar sobre Progressive Enhancement","date":"August 07, 2016","description":null}}},"pageContext":{"slug":"/precisamos-falar-sobre-progressive-enhancement/","previous":{"fields":{"slug":"/todo-list-com-javascript-localstorage/"},"frontmatter":{"title":"Criando um To-Do List com JavaScript e Web Storage API"}},"next":{"fields":{"slug":"/como-usar-github-adequadamente/"},"frontmatter":{"title":"Como usar o GitHub adequadamente"}}}},"staticQueryHashes":["2841359383","916993862"]}